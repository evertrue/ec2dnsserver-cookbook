<% require 'ipaddr' -%>
$TTL <%= @default_ttl %>
$ORIGIN <%= @apex %>.
@ <%= @default_ttl %> IN SOA <%= @source_host %>.<%= @ns_zone %>. <%= @contact_email %>. (
  <%= @serial_number %>
  <%= @refresh_time %>
  <%= @retry_time %>
  <%= @expire_time %>
  <%= @nxdomain_ttl %>
)
<%
if ! Chef::Recipe::Ec2DnsServer.valid_hostname?(node.name)
  fail "My own hostname #{node.name} is invalid"
end
-%>

 NS <%= node.name %>.<%= @ns_zone %>.

<%
if @ptr
-%>
<%= IPAddr.new(node['ipaddress']).reverse.sub(/\.?#{Regexp.escape(@apex)}$/,'') %> IN PTR <%= node.name %>.<%= @suffix %>.

<%
  @hosts.each do |rr,data|
    if rr != node.name
      if ! Chef::Recipe::Ec2DnsServer.valid_hostname?(rr)
        fail "Invalid hostname #{rr}"
      end
-%>
<%= IPAddr.new(data['val']).reverse.sub(/\.?#{Regexp.escape(@apex)}$/,'') %> IN PTR <%= rr %>.<%= @suffix %>.
<%
    end # if rr != node.name
  end # @hosts.each do |rr,data|
else # if @ptr
  if @is_primary
-%>

<%= node.name %> IN A <%= node['ipaddress'] %>

<%
  end # if @is_primary
  @hosts.each do |rr,data|
    if rr != node.name
      if ! Chef::Recipe::Ec2DnsServer.valid_hostname?(rr)
        fail "Invalid hostname #{rr}"
      end
-%>
<%= @stub ? '' : rr %> IN <%= data['type'] %> <%= data['val'] %>
<%
    end # if rr != node.name
  end # @hosts.each
end # if @ptr
-%>
